Dekh Bhai yeh h bolkul professional setup of an nbackend project or i should say production based 

isme ek tool hota h "prettier" jo install karna  padta h usko mene abhi install nahi kara h par vo group me kaam karne me helpful hota h 

isme hamne nodemon sikha, basically nodemon jo hota h vo server automatically start karne ke kaam me aata h 

scripts": {
    "dev": "nodemon src/index.js"
  },   something like this 


  fir sikha git ignore generator and role of git ignore

  ek bahut acchi baat pata chali ke empty files ko git push nahi akrne deta h until and unless usme kuch content likha na jae 


//lets talk about database connectivity here wew are using mongodb database as an practice purpose 

we have two ways to connect the backend with the database
1. we create a seperate file suck as "db" and write ghe conncetion code in it and call that code or file in our app.js and conncet from thwere
2. we write entire code of he conncection in the app.js itself 

dtabase se jab bhi kaam karo 
1. try catch ya promises lagao 
2. apna databse hameha dusre continent me rehta h to usko time to lagega hi isisliye async ka wait lagao 

JavaScript is single-threaded — it can do one thing at a time. If you perform time-consuming operations (like API calls, database queries, file reads), you don’t want the rest of your code to stop and wait.

This is where async/await helps!

It allows you to write asynchronous code that looks like synchronous code, making it easier to read and debug



****There shpuld no spacing betweeen = in the .env file 
every time we update .env file we have to restart the server


✅ Standardization of HTTP Status Codes:
They’re categorized into five classes, based on the first digit of the code:


Code Range	Class	Meaning
1xx	Informational	Request received, continuing process
2xx	Success	Request was successfully received
3xx	Redirection	Further action needs to be taken
4xx	Client Error	Request has an error from client side
5xx	Server Error	Server failed to fulfill a valid request
📘 Common HTTP Status Codes:
✅ 2xx – Success
200 OK – Everything worked fine.

201 Created – Resource successfully created (often used with POST).

204 No Content – Success, but no content to send back.

🔁 3xx – Redirection
301 Moved Permanently – Resource moved permanently.

302 Found – Temporarily redirected.

304 Not Modified – Cached version is still valid.

🚫 4xx – Client Error
400 Bad Request – Malformed syntax in the request.

401 Unauthorized – Authentication required.

403 Forbidden – Server understands but refuses to authorize.

404 Not Found – Resource not found.

429 Too Many Requests – Rate limiting exceeded.

🔥 5xx – Server Error
500 Internal Server Error – General server failure.

502 Bad Gateway – Invalid response from upstream server.

503 Service Unavailable – Server temporarily overloaded or down.